{
  "paths": [
    {
      "type": "file",
      "value": "index.md"
    },
    {
      "type": "file",
      "value": "01-Installation.md"
    },
    {
      "type": "file",
      "value": "02-Elastic.md"
    },
    {
      "type": "file",
      "value": "03-Set-up-and-Configuration.md"
    },
    {
      "type": "file",
      "value": "04-Searching.md"
    },
    {
      "type": "file",
      "value": "05-Spellcheck.md"
    },
    {
      "type": "dir",
      "name": "06-Advanced-Options",
      "children": [
        {
          "type": "file",
          "value": "06-Advanced-Options/01-Faceting.md"
        },
        {
          "type": "file",
          "value": "06-Advanced-Options/02-Boosting.md"
        },
        {
          "type": "file",
          "value": "06-Advanced-Options/03-Fuzzy-search.md"
        },
        {
          "type": "file",
          "value": "06-Advanced-Options/04-Elevation.md"
        },
        {
          "type": "file",
          "value": "06-Advanced-Options/05-Filters-excludes.md"
        }
      ]
    },
    {
      "type": "file",
      "value": "07-Customisation.md"
    },
    {
      "type": "file",
      "value": "08-CMS-Usage.md"
    },
    {
      "type": "file",
      "value": "09-Debugging.md"
    },
    {
      "type": "file",
      "value": "10-Suggestions.md"
    },
    {
      "type": "file",
      "value": "11-View-Permissions.md"
    },
    {
      "type": "file",
      "value": "12-Dirty-classes.md"
    },
    {
      "type": "dir",
      "name": "14-Contributing",
      "children": [
        {
          "type": "file",
          "value": "14-Contributing/01-Code-of-Conduct.md"
        },
        {
          "type": "file",
          "value": "14-Contributing/02-Contributing.md"
        }
      ]
    },
    {
      "type": "dir",
      "name": "15-Help",
      "children": [
        {
          "type": "file",
          "value": "15-Help/01-Changelog.md"
        },
        {
          "type": "file",
          "value": "15-Help/02-FAQ.md"
        },
        {
          "type": "file",
          "value": "15-Help/03-Known-issues.md"
        }
      ]
    },
    {
      "type": "dir",
      "name": "16-About",
      "children": [
        {
          "type": "file",
          "value": "16-About/01-About.md"
        },
        {
          "type": "file",
          "value": "16-About/02-Plans.md"
        },
        {
          "type": "dir",
          "name": "03-Codebase",
          "children": [
            {
              "type": "file",
              "value": "16-About/03-Codebase/01-Main-stats.md"
            }
          ]
        }
      ]
    }
  ],
  "contents": [
    {
      "path": "index.md",
      "url": "index.html",
      "content": "# Elastic Search\n\nAdvanced searching for SilverStripe with Elastic. Versions 8+ are supported.\n\nInstallation and usage are described in this documentation. See the sidebar for all parts of the documentation.\n\n## Support\n\nThere are multiple ways to support our work. This can be through Ko-Fi, GitStore, or Paypal directly (newzealand@casa-laguna.net).\n\nIf you have questions, or improvements, please raise an issue, and if you want, an accompanying Pull Request.\n\n# Sponsors\n\n- [Pikselin Ltd. (New Zealand)](https://pikselin.com)\n\n\n**NOTE**\n\nThe code in this documentation is \"pseudo-code\"; it may not exactly work, but serves as example.\n",
      "html": "<h1 id=\"elastic-search\">Elastic Search <a class=\"heading-anchor-permalink\" href=\"#elastic-search\">#</a></h1>\n<p>Advanced searching for SilverStripe with Elastic. Versions 8+ are supported.</p>\n<p>Installation and usage are described in this documentation. See the sidebar for all parts of the documentation.</p>\n<h2 id=\"support\">Support <a class=\"heading-anchor-permalink\" href=\"#support\">#</a></h2>\n<p>There are multiple ways to support our work. This can be through Ko-Fi, GitStore, or Paypal directly (<a href=\"mailto:newzealand@casa-laguna.net\">newzealand@casa-laguna.net</a>).</p>\n<p>If you have questions, or improvements, please raise an issue, and if you want, an accompanying Pull Request.</p>\n<h1 id=\"sponsors\">Sponsors <a class=\"heading-anchor-permalink\" href=\"#sponsors\">#</a></h1>\n<ul>\n<li><a href=\"https://pikselin.com\">Pikselin Ltd. (New Zealand)</a></li>\n</ul>\n<p><strong>NOTE</strong></p>\n<p>The code in this documentation is “pseudo-code”; it may not exactly work, but serves as example.</p>\n",
      "id": 0
    },
    {
      "path": "01-Installation.md",
      "url": "01-Installation.html",
      "content": "# Installing the module\n\nBest practice is to use composer:\n`composer require firesphere/solr-search`\n\n## Manual setup\n\n- Create a clean installation of SilverStripe 4 or 5 (`composer create-project`)\n- Clone this repo in to the folder of your liking\n- Check which modules you need to add to your base `composer.json`\n- Run a composer update\n- Create a base index:\n\n```php\nclass MyIndex extends ElasticIndex\n{\n    /**\n     * Called during construction, this is the method that builds the structure.\n     * Used instead of overriding __construct as we have specific execution order - code that has\n     * to be run before _and/or_ after this.\n     * @throws Exception\n     */\n    public function init()\n    {\n        $this->addClass(SiteTree::class);\n\n        $this->addFulltextField('Title');\n    }\n    \n    public function getIndexName()\n    {\n        return 'this-is-my-index';\n    }\n}\n```\n- Run `vendor/bin/sake dev/tasks/ElasticIndexTask` to add documents to your index.\nNote, the index will be automatically created if it doesn't exist yet.\n- Run `vendor/bin/sake dev/tasks/ElasticSynonymTask` to load synonyms to Elastic.\n\nOnce these tasks have completed - happy searching!\n",
      "html": "<h1 id=\"installing-the-module\">Installing the module <a class=\"heading-anchor-permalink\" href=\"#installing-the-module\">#</a></h1>\n<p>Best practice is to use composer:\n<code>composer require firesphere/solr-search</code></p>\n<h2 id=\"manual-setup\">Manual setup <a class=\"heading-anchor-permalink\" href=\"#manual-setup\">#</a></h2>\n<ul>\n<li>Create a clean installation of SilverStripe 4 or 5 (<code>composer create-project</code>)</li>\n<li>Clone this repo in to the folder of your liking</li>\n<li>Check which modules you need to add to your base <code>composer.json</code></li>\n<li>Run a composer update</li>\n<li>Create a base index:</li>\n</ul>\n<pre><code class=\"language-php\">class MyIndex extends ElasticIndex\n{\n    /**\n     * Called during construction, this is the method that builds the structure.\n     * Used instead of overriding __construct as we have specific execution order - code that has\n     * to be run before _and/or_ after this.\n     * @throws Exception\n     */\n    public function init()\n    {\n        $this-&gt;addClass(SiteTree::class);\n\n        $this-&gt;addFulltextField('Title');\n    }\n    \n    public function getIndexName()\n    {\n        return 'this-is-my-index';\n    }\n}\n</code></pre>\n<ul>\n<li>Run <code>vendor/bin/sake dev/tasks/ElasticIndexTask</code> to add documents to your index.\nNote, the index will be automatically created if it doesn’t exist yet.</li>\n<li>Run <code>vendor/bin/sake dev/tasks/ElasticSynonymTask</code> to load synonyms to Elastic.</li>\n</ul>\n<p>Once these tasks have completed - happy searching!</p>\n",
      "id": 1
    },
    {
      "path": "02-Elastic.md",
      "url": "02-Elastic.html",
      "content": "# Installing Elastic\n\nLowest version supported is currently 8.10\n\n## Installation\n\n```shell\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg\nsudo apt-get install apt-transport-https\necho \"deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main\" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list\nsudo apt-get update && sudo apt-get install elasticsearch\n```\n\nThis will install Elastic 8.x as a service on your host machine\n",
      "html": "<h1 id=\"installing-elastic\">Installing Elastic <a class=\"heading-anchor-permalink\" href=\"#installing-elastic\">#</a></h1>\n<p>Lowest version supported is currently 8.10</p>\n<h2 id=\"installation\">Installation <a class=\"heading-anchor-permalink\" href=\"#installation\">#</a></h2>\n<pre><code class=\"language-shell\">wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg\nsudo apt-get install apt-transport-https\necho &quot;deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main&quot; | sudo tee /etc/apt/sources.list.d/elastic-8.x.list\nsudo apt-get update &amp;&amp; sudo apt-get install elasticsearch\n</code></pre>\n<p>This will install Elastic 8.x as a service on your host machine</p>\n",
      "id": 2
    },
    {
      "path": "03-Set-up-and-Configuration.md",
      "url": "03-Set-up-and-Configuration.html",
      "content": "# Set-up and configuration\n\n## Getting started\n\nIn order to return search results, Elastic requires an Index that holds the searchable data.\nSo the first thing you _need_ to do is to create an index extending the\n`Firesphere\\ElasticSearch\\Indexes\\ElasticIndex` class.\n\nIf you are extending the base Index, it will require a `getIndexName` method\nwhich is used to determine the name of the index to query Elastic.\n\n**IMPORTANT**\n\nThe usage of `YML` for the core configuration is _not_ a replacement for creating your own Index\nextending either of the Base Indexes; it is a complement to it.\n\n`YML` is purely used for the configuration of the index Classes.\n\n## Configuration\n\nConfiguring Elastic is done via YML:\n```yaml\nFiresphere\\ElasticSearch\\Services\\ElasticCoreService:\n  config:\n    endpoint:\n      myhostname:\n        host: myhost.com\n        port: 9200\n        username: MyUsername\n        password: MyPassword\n        # set up timeouts\n  # default path settings\n  debug: false\n```\n\n### Authentication\n\nElastic supports several ways of adding authentication to the instance.\n\nThe module supports Basic Authentication or APIKey, which can be added in the YML config like so:\n```yaml\nFiresphere\\ElasticSearch\\Services\\ElasticCoreService:\n  config:\n    endpoint:\n      myhostname:\n        username: Elastic\n        password: ElasticRocks\n        apiKey: MyBase64EncodedApiKeyHere===\n```\n\n### Debug\n\nYou can force the debugging to false, by setting the debug flag. If you omit this tag, CLI and Dev mode\nwill have debugging enabled.\n\n#### ShowInSearch\n\n`ShowInSearch` is handled by the module itself, so there is no need to configure it within your YML/PHP index definition. \nWhen a content author sets this field to `0` via the CMS, then the related Page or File object is actually _removed_ from the applicable Elastic \ncore immediately through the `onAfterPublish` or `onAfterWrite` method, or during the next run of the `ElasticIndexJob`.\n\nTherefore, custom addition of `ShowInSearch` as a filterable or indexable field in YML\nis likely to cause unexpected behaviour.\n\nThe reason for removing `ShowInSearch = false|0` from the indexing process, \nis to streamline the number of items stored in Elastic's indexes. \nThere is no effective need for items to be in the search, if they're not supposed to \nbe displayed.\n\n#### Dirty classes\n*NOTE* This is currently unfinished\n\nIf a change fails to update, a `DirtyClass` is created, recording the need for updating\nsaid object. It is recommended to automatically run the `ClearDirtyClasses` task every few hours\ndepending on the expected amount of changes daily and the importance of those changes.\n\nThe expected time to run the task is quite low, so we recommend running this task reasonably\n often (every 5 or 10 minutes).\n\n \n\n### Using YML\n\n```yaml\nFiresphere\\ElasticSearch\\Indexes\\ElasticIndex:\n  MySearchIndex:\n    Classes:\n      - SilverStripe\\CMS\\Model\\SiteTree\n    FulltextFields:\n      - Content\n      - TestObject.Title\n      - TestObject.TestRelation.Title\n    SortFields: \n\t  - Created\n    FilterFields:\n      - Title\n      - Created\n      - Firesphere\\ElasticSearch\\Tests\\TestObject\n    BoostedFields:\n\t  - Title\n    FacetFields:\n      Firesphere\\ElasticSearch\\Tests\\TestObject:\n        BaseClass: SilverStripe\\CMS\\Model\\SiteTree\n        Field: ID\n        Title: TestObject\n\n```\n**NOTE** Facets are on to-do\n\n#### MySearchIndex\n\nThis name should match the name you provided in your Index extending the `ElasticIndex` you are instructed\nto create in the first step of this document.\n\n## Grouped indexing\n\nBe aware that Grouped indexing is `0`-based. Thus, if there are 150 groups to index,\nthe final group to index will be 149 instead of 150.\n\n## Method output casting\n\nTo get the correct Elastic field type in the Elastic Configuration, you will need to add a\ncasting for each method you want to add. So for the `Content` field, the method below:\n\n```php\npublic function getContent()\n{\n    return $renderedContent;\n}\n```\n\nCould have a casting like the below to ensure it renders as HTML:\n\n```php\nprivate static $casting = [\n    'getContent' => 'HTMLText',\n    'Content'    => 'HTMLText'\n];\n```\n\nDepending on your field definition, you either need to have the full method name, or the short method name.\n\n## Another way to set the config in PHP\n\nYou could also use PHP to set the config. For readability however, it's better to use variables for Facets:\n```php\n    protected $facetFields = [\n        RelatedObject::class   => [\n            'BaseClass' => SiteTree::class,\n            'Field'     => 'RelatedObjectID',\n            'Title'     => 'RelationOne'\n        ],\n        OtherRelatedObject::class => [\n            'BaseClass' => SiteTree::class,\n            'Field'     => 'OtherRelatedObjectID',\n            'Title'     => 'RelationTwo'\n        ]\n    ];\n```\n\nThis will generate a facet field in Elastic, assuming this relation exists on `SiteTree` or `Page`.\n\nThe relation would look like `SiteTree.RelatedObjectID`, where `RelatedObject` the name of the relation reflects.\n\nThe Title is used to group all facets by their Title, in the template, this is accessible by looping `$Result.FacetSet.TitleOfTheFacet`\n\n### Important notice\n\nFacets are relational. For faceting on a relation, omit the origin class (e.g. `SiteTree`), but supply the full relational\npath to the facet. e.g. if you want to have facets on `RelationObject->ManyRelation()->OneRelation()->ID`, the Facet declaration should be\n`ManyRelationObject.OneRelationID`, assuming it's a `has_one` relation.\n\nIf you have many relations, through either `many_many` or `has_many`, your definition should \nuse `ManyRelationObjectName.Relation.ID` instead of `RelationID`. It works and resolves the same.\n\nIt is strongly advised to use relations for faceting, as Elastic tends to think of textual relations in a different way.\n\n#### Example\n\nIf you set relations on `MyObject.TextField`, and the text field contains \"Content Name\nOne\" and \"Content Name Two\", faceting would be done in such a way that \"Content\", \"Name\"\nand \"One\" would be three different facet results, rather than \"Content Name One\".\n\n## Accessing Elastic\n\nIf available, you can access your Elastic instance via Kibana, at `http://mydomain.com:5601`\n\n## Excluding unwanted indexes\n\nTo exclude unwanted indexes, it is possible declare a list of _wanted_ indexes in the `YML`\n\n```yaml\nFiresphere\\ElasticSearch\\Services\\ElasticCoreService:\n  indexes:\n    - CircleCITestIndex\n    - Firesphere\\ElasticSearch\\Tests\\TestIndex\n    - Firesphere\\ElasticSearch\\Tests\\TestIndexTwo\n    - Firesphere\\ElasticSearch\\Tests\\TestIndexThree\n```\n\nLooking at the `tests` folder, there is a `TestIndexFour`. This index is not loaded unless explicitly asked.\n",
      "html": "<h1 id=\"set-up-and-configuration\">Set-up and configuration <a class=\"heading-anchor-permalink\" href=\"#set-up-and-configuration\">#</a></h1>\n<h2 id=\"getting-started\">Getting started <a class=\"heading-anchor-permalink\" href=\"#getting-started\">#</a></h2>\n<p>In order to return search results, Elastic requires an Index that holds the searchable data.\nSo the first thing you <em>need</em> to do is to create an index extending the\n<code>Firesphere\\ElasticSearch\\Indexes\\ElasticIndex</code> class.</p>\n<p>If you are extending the base Index, it will require a <code>getIndexName</code> method\nwhich is used to determine the name of the index to query Elastic.</p>\n<p><strong>IMPORTANT</strong></p>\n<p>The usage of <code>YML</code> for the core configuration is <em>not</em> a replacement for creating your own Index\nextending either of the Base Indexes; it is a complement to it.</p>\n<p><code>YML</code> is purely used for the configuration of the index Classes.</p>\n<h2 id=\"configuration\">Configuration <a class=\"heading-anchor-permalink\" href=\"#configuration\">#</a></h2>\n<p>Configuring Elastic is done via YML:</p>\n<pre><code class=\"language-yaml\">Firesphere\\ElasticSearch\\Services\\ElasticCoreService:\n  config:\n    endpoint:\n      myhostname:\n        host: myhost.com\n        port: 9200\n        username: MyUsername\n        password: MyPassword\n        # set up timeouts\n  # default path settings\n  debug: false\n</code></pre>\n<h3 id=\"authentication\">Authentication <a class=\"heading-anchor-permalink\" href=\"#authentication\">#</a></h3>\n<p>Elastic supports several ways of adding authentication to the instance.</p>\n<p>The module supports Basic Authentication or APIKey, which can be added in the YML config like so:</p>\n<pre><code class=\"language-yaml\">Firesphere\\ElasticSearch\\Services\\ElasticCoreService:\n  config:\n    endpoint:\n      myhostname:\n        username: Elastic\n        password: ElasticRocks\n        apiKey: MyBase64EncodedApiKeyHere===\n</code></pre>\n<h3 id=\"debug\">Debug <a class=\"heading-anchor-permalink\" href=\"#debug\">#</a></h3>\n<p>You can force the debugging to false, by setting the debug flag. If you omit this tag, CLI and Dev mode\nwill have debugging enabled.</p>\n<h4 id=\"showinsearch\">ShowInSearch <a class=\"heading-anchor-permalink\" href=\"#showinsearch\">#</a></h4>\n<p><code>ShowInSearch</code> is handled by the module itself, so there is no need to configure it within your YML/PHP index definition.\nWhen a content author sets this field to <code>0</code> via the CMS, then the related Page or File object is actually <em>removed</em> from the applicable Elastic\ncore immediately through the <code>onAfterPublish</code> or <code>onAfterWrite</code> method, or during the next run of the <code>ElasticIndexJob</code>.</p>\n<p>Therefore, custom addition of <code>ShowInSearch</code> as a filterable or indexable field in YML\nis likely to cause unexpected behaviour.</p>\n<p>The reason for removing <code>ShowInSearch = false|0</code> from the indexing process,\nis to streamline the number of items stored in Elastic’s indexes.\nThere is no effective need for items to be in the search, if they’re not supposed to\nbe displayed.</p>\n<h4 id=\"dirty-classes\">Dirty classes <a class=\"heading-anchor-permalink\" href=\"#dirty-classes\">#</a></h4>\n<p><em>NOTE</em> This is currently unfinished</p>\n<p>If a change fails to update, a <code>DirtyClass</code> is created, recording the need for updating\nsaid object. It is recommended to automatically run the <code>ClearDirtyClasses</code> task every few hours\ndepending on the expected amount of changes daily and the importance of those changes.</p>\n<p>The expected time to run the task is quite low, so we recommend running this task reasonably\noften (every 5 or 10 minutes).</p>\n<h3 id=\"using-yml\">Using YML <a class=\"heading-anchor-permalink\" href=\"#using-yml\">#</a></h3>\n<pre><code class=\"language-yaml\">Firesphere\\ElasticSearch\\Indexes\\ElasticIndex:\n  MySearchIndex:\n    Classes:\n      - SilverStripe\\CMS\\Model\\SiteTree\n    FulltextFields:\n      - Content\n      - TestObject.Title\n      - TestObject.TestRelation.Title\n    SortFields: \n\t  - Created\n    FilterFields:\n      - Title\n      - Created\n      - Firesphere\\ElasticSearch\\Tests\\TestObject\n    BoostedFields:\n\t  - Title\n    FacetFields:\n      Firesphere\\ElasticSearch\\Tests\\TestObject:\n        BaseClass: SilverStripe\\CMS\\Model\\SiteTree\n        Field: ID\n        Title: TestObject\n\n</code></pre>\n<p><strong>NOTE</strong> Facets are on to-do</p>\n<h4 id=\"mysearchindex\">MySearchIndex <a class=\"heading-anchor-permalink\" href=\"#mysearchindex\">#</a></h4>\n<p>This name should match the name you provided in your Index extending the <code>ElasticIndex</code> you are instructed\nto create in the first step of this document.</p>\n<h2 id=\"grouped-indexing\">Grouped indexing <a class=\"heading-anchor-permalink\" href=\"#grouped-indexing\">#</a></h2>\n<p>Be aware that Grouped indexing is <code>0</code>-based. Thus, if there are 150 groups to index,\nthe final group to index will be 149 instead of 150.</p>\n<h2 id=\"method-output-casting\">Method output casting <a class=\"heading-anchor-permalink\" href=\"#method-output-casting\">#</a></h2>\n<p>To get the correct Elastic field type in the Elastic Configuration, you will need to add a\ncasting for each method you want to add. So for the <code>Content</code> field, the method below:</p>\n<pre><code class=\"language-php\">public function getContent()\n{\n    return $renderedContent;\n}\n</code></pre>\n<p>Could have a casting like the below to ensure it renders as HTML:</p>\n<pre><code class=\"language-php\">private static $casting = [\n    'getContent' =&gt; 'HTMLText',\n    'Content'    =&gt; 'HTMLText'\n];\n</code></pre>\n<p>Depending on your field definition, you either need to have the full method name, or the short method name.</p>\n<h2 id=\"another-way-to-set-the-config-in-php\">Another way to set the config in PHP <a class=\"heading-anchor-permalink\" href=\"#another-way-to-set-the-config-in-php\">#</a></h2>\n<p>You could also use PHP to set the config. For readability however, it’s better to use variables for Facets:</p>\n<pre><code class=\"language-php\">    protected $facetFields = [\n        RelatedObject::class   =&gt; [\n            'BaseClass' =&gt; SiteTree::class,\n            'Field'     =&gt; 'RelatedObjectID',\n            'Title'     =&gt; 'RelationOne'\n        ],\n        OtherRelatedObject::class =&gt; [\n            'BaseClass' =&gt; SiteTree::class,\n            'Field'     =&gt; 'OtherRelatedObjectID',\n            'Title'     =&gt; 'RelationTwo'\n        ]\n    ];\n</code></pre>\n<p>This will generate a facet field in Elastic, assuming this relation exists on <code>SiteTree</code> or <code>Page</code>.</p>\n<p>The relation would look like <code>SiteTree.RelatedObjectID</code>, where <code>RelatedObject</code> the name of the relation reflects.</p>\n<p>The Title is used to group all facets by their Title, in the template, this is accessible by looping <code>$Result.FacetSet.TitleOfTheFacet</code></p>\n<h3 id=\"important-notice\">Important notice <a class=\"heading-anchor-permalink\" href=\"#important-notice\">#</a></h3>\n<p>Facets are relational. For faceting on a relation, omit the origin class (e.g. <code>SiteTree</code>), but supply the full relational\npath to the facet. e.g. if you want to have facets on <code>RelationObject-&gt;ManyRelation()-&gt;OneRelation()-&gt;ID</code>, the Facet declaration should be\n<code>ManyRelationObject.OneRelationID</code>, assuming it’s a <code>has_one</code> relation.</p>\n<p>If you have many relations, through either <code>many_many</code> or <code>has_many</code>, your definition should\nuse <code>ManyRelationObjectName.Relation.ID</code> instead of <code>RelationID</code>. It works and resolves the same.</p>\n<p>It is strongly advised to use relations for faceting, as Elastic tends to think of textual relations in a different way.</p>\n<h4 id=\"example\">Example <a class=\"heading-anchor-permalink\" href=\"#example\">#</a></h4>\n<p>If you set relations on <code>MyObject.TextField</code>, and the text field contains “Content Name\nOne” and “Content Name Two”, faceting would be done in such a way that “Content”, “Name”\nand “One” would be three different facet results, rather than “Content Name One”.</p>\n<h2 id=\"accessing-elastic\">Accessing Elastic <a class=\"heading-anchor-permalink\" href=\"#accessing-elastic\">#</a></h2>\n<p>If available, you can access your Elastic instance via Kibana, at <code>http://mydomain.com:5601</code></p>\n<h2 id=\"excluding-unwanted-indexes\">Excluding unwanted indexes <a class=\"heading-anchor-permalink\" href=\"#excluding-unwanted-indexes\">#</a></h2>\n<p>To exclude unwanted indexes, it is possible declare a list of <em>wanted</em> indexes in the <code>YML</code></p>\n<pre><code class=\"language-yaml\">Firesphere\\ElasticSearch\\Services\\ElasticCoreService:\n  indexes:\n    - CircleCITestIndex\n    - Firesphere\\ElasticSearch\\Tests\\TestIndex\n    - Firesphere\\ElasticSearch\\Tests\\TestIndexTwo\n    - Firesphere\\ElasticSearch\\Tests\\TestIndexThree\n</code></pre>\n<p>Looking at the <code>tests</code> folder, there is a <code>TestIndexFour</code>. This index is not loaded unless explicitly asked.</p>\n",
      "id": 3
    },
    {
      "path": "04-Searching.md",
      "url": "04-Searching.html",
      "content": "# Executing a search\n\nTo search, here's an example using all the features, and setting the resulting outcome from the search\nonto the current `Controller` to be useable in templates.\n\nMore advanced filter options are available, see the [Advanced filters & excludes](06-Advanced-Options/05-Filters-excludes.md)\npage for more information.\n\n```php\nclass SearchController extends PageController\n{\n    protected $ResultSet;\n    \n    public function setResultSet($set)\n    {\n        $this->ResultSet = $set;    \n    }\n\n    /**\n     * @param array $data Data from the submission\n     * @param SearchForm $form Submitted search form\n     * @return $this\n     */\n    public function searchMyContent($data, $form)\n    {\n        $searchVars = $this->getRequest()->getVars();\n        if (!empty($searchVars)) {\n            // Set the query, possibly to be used to display it back to the user\n            $this->setQuery($searchVars);\n            /** @var BaseIndex $index */\n            $index = Injector::inst()->get(MyIndex::class);\n    \n            // Start building the query, by adding the query term\n            $query = new ElasticQuery();\n            $query->addTerm($searchVars['Query']);\n        \n            // Set the startpoint of the results\n            $offset = $this->getRequest()->getVar('start') ?: 0;\n            $query->setStart($offset);\n    \n            // Execute the search\n            $result = $index->doSearch($query);\n    \n            // Assuming the controller has this method and variable\n            $this->setResultSet($result);\n        }\n    \n        return $this;\n    }\n}\n```\n\nNow, in your template, you could do something like this, to display the results, based on Bootstrap:\n```html\n<% with $ResultSet %>\n    <% if $TotalItems %>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-xs-12\"><br/>\n            <span class=\"pull-right\">\n                Results: <span class=\"js-total-results\">$TotalItems</span>\n            </span>\n        </div>\n    <% else %>\n        <h6 class=\"col-xs-12 col-md-6\">No results found for your query \"<i>$Up.Query.XML</i>\"</h6>\n        <span class=\"hidden js-total-results\">0</span>\n    <% end_if %>\n    <% if $Spellcheck.Count %>\n        <h6 class=\"col-xs-12 col-md-6\">You might have a spelling error, try\n            <a href=\"{$Top.Link}search/?Query={$SpellcheckLink}\">$SpellcheckTitle</a> instead?\n        </h6>\n    <% end_if %>\n    <div class=\"col-xs-12\">\n        <% if $TotalItems %>\n            <p>&nbsp;</p>\n            <% loop $PaginatedMatches %>\n                <% include Match %>\n            <% end_loop %>\n        <% end_if %>\n        <% include Pagination %>\n        <p>&nbsp;</p>\n    </div>\n    <nav id=\"pageNav\" role=\"navigation\" class=\"page-sidebar-widget page-sidebar-nav\">\n        <div class=\"row\">\n            <% with $Facets %>\n                <!-- You can repeat the following for each of your Facet Titles -->\n                <div class=\"col-xs-6 col-md-12\">\n                    <h3 class=\"h4 page-sidebar-header\">YourFacetName</h3>\n                    <ul class=\"list-unstyled\">\n                        <% loop $YourFacetName %>\n                            <li>\n                                <a href=\"$SearchLink\" title=\"$Name $Topic.XML\">\n                                    $Name ($FacetCount)\n                                </a>\n                            </li>\n                        <% end_loop %>\n                    </ul>\n                </div>\n            <% end_with %>\n        </div>\n    </nav>\n<% end_with %>\n```\n\nExample of a `$SearchLink` method, that'll return a link to the Faceted set:\n\n```php\nclass FacetedObject\n{\n    public function getSearchLink()\n    {\n        $controller = Controller::curr();\n\n        $vars = $controller->getRequest()->getVars();\n\n        $vars['MyFacetObject[]'] = $this->ID;\n\n        return $controller->Link('search?' . http_build_query($vars));\n    }\n}\n```\n \n",
      "html": "<h1 id=\"executing-a-search\">Executing a search <a class=\"heading-anchor-permalink\" href=\"#executing-a-search\">#</a></h1>\n<p>To search, here’s an example using all the features, and setting the resulting outcome from the search\nonto the current <code>Controller</code> to be useable in templates.</p>\n<p>More advanced filter options are available, see the <a href=\"06-Advanced-Options/05-Filters-excludes.html\">Advanced filters &amp; excludes</a>\npage for more information.</p>\n<pre><code class=\"language-php\">class SearchController extends PageController\n{\n    protected $ResultSet;\n    \n    public function setResultSet($set)\n    {\n        $this-&gt;ResultSet = $set;    \n    }\n\n    /**\n     * @param array $data Data from the submission\n     * @param SearchForm $form Submitted search form\n     * @return $this\n     */\n    public function searchMyContent($data, $form)\n    {\n        $searchVars = $this-&gt;getRequest()-&gt;getVars();\n        if (!empty($searchVars)) {\n            // Set the query, possibly to be used to display it back to the user\n            $this-&gt;setQuery($searchVars);\n            /** @var BaseIndex $index */\n            $index = Injector::inst()-&gt;get(MyIndex::class);\n    \n            // Start building the query, by adding the query term\n            $query = new ElasticQuery();\n            $query-&gt;addTerm($searchVars['Query']);\n        \n            // Set the startpoint of the results\n            $offset = $this-&gt;getRequest()-&gt;getVar('start') ?: 0;\n            $query-&gt;setStart($offset);\n    \n            // Execute the search\n            $result = $index-&gt;doSearch($query);\n    \n            // Assuming the controller has this method and variable\n            $this-&gt;setResultSet($result);\n        }\n    \n        return $this;\n    }\n}\n</code></pre>\n<p>Now, in your template, you could do something like this, to display the results, based on Bootstrap:</p>\n<pre><code class=\"language-html\">&lt;% with $ResultSet %&gt;\n    &lt;% if $TotalItems %&gt;\n        &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;\n        &lt;div class=&quot;col-xs-12&quot;&gt;&lt;br/&gt;\n            &lt;span class=&quot;pull-right&quot;&gt;\n                Results: &lt;span class=&quot;js-total-results&quot;&gt;$TotalItems&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/div&gt;\n    &lt;% else %&gt;\n        &lt;h6 class=&quot;col-xs-12 col-md-6&quot;&gt;No results found for your query &quot;&lt;i&gt;$Up.Query.XML&lt;/i&gt;&quot;&lt;/h6&gt;\n        &lt;span class=&quot;hidden js-total-results&quot;&gt;0&lt;/span&gt;\n    &lt;% end_if %&gt;\n    &lt;% if $Spellcheck.Count %&gt;\n        &lt;h6 class=&quot;col-xs-12 col-md-6&quot;&gt;You might have a spelling error, try\n            &lt;a href=&quot;{$Top.Link}search/?Query={$SpellcheckLink}&quot;&gt;$SpellcheckTitle&lt;/a&gt; instead?\n        &lt;/h6&gt;\n    &lt;% end_if %&gt;\n    &lt;div class=&quot;col-xs-12&quot;&gt;\n        &lt;% if $TotalItems %&gt;\n            &lt;p&gt;&amp;nbsp;&lt;/p&gt;\n            &lt;% loop $PaginatedMatches %&gt;\n                &lt;% include Match %&gt;\n            &lt;% end_loop %&gt;\n        &lt;% end_if %&gt;\n        &lt;% include Pagination %&gt;\n        &lt;p&gt;&amp;nbsp;&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;nav id=&quot;pageNav&quot; role=&quot;navigation&quot; class=&quot;page-sidebar-widget page-sidebar-nav&quot;&gt;\n        &lt;div class=&quot;row&quot;&gt;\n            &lt;% with $Facets %&gt;\n                &lt;!-- You can repeat the following for each of your Facet Titles --&gt;\n                &lt;div class=&quot;col-xs-6 col-md-12&quot;&gt;\n                    &lt;h3 class=&quot;h4 page-sidebar-header&quot;&gt;YourFacetName&lt;/h3&gt;\n                    &lt;ul class=&quot;list-unstyled&quot;&gt;\n                        &lt;% loop $YourFacetName %&gt;\n                            &lt;li&gt;\n                                &lt;a href=&quot;$SearchLink&quot; title=&quot;$Name $Topic.XML&quot;&gt;\n                                    $Name ($FacetCount)\n                                &lt;/a&gt;\n                            &lt;/li&gt;\n                        &lt;% end_loop %&gt;\n                    &lt;/ul&gt;\n                &lt;/div&gt;\n            &lt;% end_with %&gt;\n        &lt;/div&gt;\n    &lt;/nav&gt;\n&lt;% end_with %&gt;\n</code></pre>\n<p>Example of a <code>$SearchLink</code> method, that’ll return a link to the Faceted set:</p>\n<pre><code class=\"language-php\">class FacetedObject\n{\n    public function getSearchLink()\n    {\n        $controller = Controller::curr();\n\n        $vars = $controller-&gt;getRequest()-&gt;getVars();\n\n        $vars['MyFacetObject[]'] = $this-&gt;ID;\n\n        return $controller-&gt;Link('search?' . http_build_query($vars));\n    }\n}\n</code></pre>\n",
      "id": 4
    },
    {
      "path": "05-Spellcheck.md",
      "url": "05-Spellcheck.html",
      "content": "# Spellcheck\n\n> I cand zpel gud\n\n**NOTE** This is work in progress! The output is not definitive yet.\n\nSpellchecking is enabled by default, and can be disabled\non query time, by setting `$query->setSpellcheck(false);`\n\nSpellchecking is carried over to the search result returned.\n\nTo access the spellchecks, the following methods can be used:\n\n## Word-based only spellchecking\n\nWord based spellcheck returns only misspelled words. For example,\nif the query is \"hesp me\", the word based spellcheck will return a list\nof words that are possible alternatives for \"hesp\".\n\ne.g.\n- help\n- helm\n- hero\n\nThe resulting list can be accessed as an ArrayList, as the example below:\n\n```html\n<% if $Results.Spellcheck.Count %>\n    <% loop $Results.Spellcheck %>\n        $word\n    <% end_loop %>\n<% end_if %>\n```\n",
      "html": "<h1 id=\"spellcheck\">Spellcheck <a class=\"heading-anchor-permalink\" href=\"#spellcheck\">#</a></h1>\n<blockquote>\n<p>I cand zpel gud</p>\n</blockquote>\n<p><strong>NOTE</strong> This is work in progress! The output is not definitive yet.</p>\n<p>Spellchecking is enabled by default, and can be disabled\non query time, by setting <code>$query-&gt;setSpellcheck(false);</code></p>\n<p>Spellchecking is carried over to the search result returned.</p>\n<p>To access the spellchecks, the following methods can be used:</p>\n<h2 id=\"word-based-only-spellchecking\">Word-based only spellchecking <a class=\"heading-anchor-permalink\" href=\"#word-based-only-spellchecking\">#</a></h2>\n<p>Word based spellcheck returns only misspelled words. For example,\nif the query is “hesp me”, the word based spellcheck will return a list\nof words that are possible alternatives for “hesp”.</p>\n<p>e.g.</p>\n<ul>\n<li>help</li>\n<li>helm</li>\n<li>hero</li>\n</ul>\n<p>The resulting list can be accessed as an ArrayList, as the example below:</p>\n<pre><code class=\"language-html\">&lt;% if $Results.Spellcheck.Count %&gt;\n    &lt;% loop $Results.Spellcheck %&gt;\n        $word\n    &lt;% end_loop %&gt;\n&lt;% end_if %&gt;\n</code></pre>\n",
      "id": 5
    },
    {
      "path": "06-Advanced-Options/01-Faceting.md",
      "url": "06-Advanced-Options/01-Faceting.html",
      "content": "# Faceting\n\n**Facets are on the to-do list**\n\n## What are facets?\n\nFacets are related topics, e.g. if you have blog posts that are in categories, faceting allows\nyou to show data about the categories of the blog posts returned in your search results.\n\nFor example, say you have 10 posts in \"Rants\" and 20 posts in \"Recipes\". If you perform a search where\nthere are 15 results, 8 of which are in the \"Rants\" category and 12 of which are in the \"Recipes\"\ncategory, you can show a list like so:\n- Rants (8)\n- Recipes (12)\n\nThis helps your visitors to narrow their search by filtering for a specific category.\n\n### AND facets\n\nFacets are by default applied as a combined `AND` query. For example, facet filtering by UserID 1,2 plus Parent 5 \nwill result in:\n \n `UserID:1 AND UserID:2 AND Parent:5`\n\n### OR facets\n\nUsing OR facets, each facet is treated as a separate part of the query. In the above example, \nit would lead to the following query:\n\n`UserID:1 AND UserID:2 OR Parent:5`\n\n## Difference between FacetFields and FacetFilters\n\n- Facet _fields_, are the fields that are expected to be returned by Solr and need to be configured.\n- Facet _filters_, are the actual filters, that are applied at query time, to narrow down the results by the selected Facets.\n\n## Applying facets\n\nTo configure Facets, have a look at the [usage](../03-Set-up-and-Configuration.md) documentation.\n\nMake sure your Facet Fields are set correctly, as per the documentation.\n\nAny variable from your request that is _not_ a valid Facet will be ignored.\n\n### AND facets\n\nTo use AND facets, this example should get you started:\n\n```php\n    $data = Controller::curr()->getRequest()->getVars();\n    $index = Injector::inst()->get(MyIndex::class);\n    $query = Injector::inst()->get(BaseQuery::class);\n    $facetedFields = $index->getFacetFields();\n    foreach ($facetedFields as $className => $field) {\n        // Title of your field, as defined in the FacetFields\n        if (!empty($data[$field['Title']])) {\n            // Add a facet filter with its title and the value from the request data\n            $query->addFacetFilter($field['Title'], $data[$field['Title']]);\n        }\n    }\n```\n\n*Note*, `addFacetFilter` and `addAndFacetFilter` are interchangeable.\n\n### OR facets\n\nTo use OR facets, this example should get you started:\n\n```php\n    $data = Controller::curr()->getRequest()->getVars();\n    $index = Injector::inst()->get(MyIndex::class);\n    $query = Injector::inst()->get(BaseQuery::class);\n    $facetedFields = $index->getFacetFields();\n    foreach ($facetedFields as $className => $field) {\n        // Title of your field, as defined in the FacetFields\n        if (!empty($data[$field['Title']])) {\n            // Add a facet filter with its title and the value from the request data\n            $query->addOrFacetFilter($field['Title'], $data[$field['Title']]);\n        }\n    }\n```\n\nNotice the subtle difference in `$query->addOrFacetFilter()` versus `$query->addFacetFilter()`\n",
      "html": "<h1 id=\"faceting\">Faceting <a class=\"heading-anchor-permalink\" href=\"#faceting\">#</a></h1>\n<p><strong>Facets are on the to-do list</strong></p>\n<h2 id=\"what-are-facets%3F\">What are facets? <a class=\"heading-anchor-permalink\" href=\"#what-are-facets%3F\">#</a></h2>\n<p>Facets are related topics, e.g. if you have blog posts that are in categories, faceting allows\nyou to show data about the categories of the blog posts returned in your search results.</p>\n<p>For example, say you have 10 posts in “Rants” and 20 posts in “Recipes”. If you perform a search where\nthere are 15 results, 8 of which are in the “Rants” category and 12 of which are in the “Recipes”\ncategory, you can show a list like so:</p>\n<ul>\n<li>Rants (8)</li>\n<li>Recipes (12)</li>\n</ul>\n<p>This helps your visitors to narrow their search by filtering for a specific category.</p>\n<h3 id=\"and-facets\">AND facets <a class=\"heading-anchor-permalink\" href=\"#and-facets\">#</a></h3>\n<p>Facets are by default applied as a combined <code>AND</code> query. For example, facet filtering by UserID 1,2 plus Parent 5\nwill result in:</p>\n<p><code>UserID:1 AND UserID:2 AND Parent:5</code></p>\n<h3 id=\"or-facets\">OR facets <a class=\"heading-anchor-permalink\" href=\"#or-facets\">#</a></h3>\n<p>Using OR facets, each facet is treated as a separate part of the query. In the above example,\nit would lead to the following query:</p>\n<p><code>UserID:1 AND UserID:2 OR Parent:5</code></p>\n<h2 id=\"difference-between-facetfields-and-facetfilters\">Difference between FacetFields and FacetFilters <a class=\"heading-anchor-permalink\" href=\"#difference-between-facetfields-and-facetfilters\">#</a></h2>\n<ul>\n<li>Facet <em>fields</em>, are the fields that are expected to be returned by Solr and need to be configured.</li>\n<li>Facet <em>filters</em>, are the actual filters, that are applied at query time, to narrow down the results by the selected Facets.</li>\n</ul>\n<h2 id=\"applying-facets\">Applying facets <a class=\"heading-anchor-permalink\" href=\"#applying-facets\">#</a></h2>\n<p>To configure Facets, have a look at the <a href=\"../03-Set-up-and-Configuration.html\">usage</a> documentation.</p>\n<p>Make sure your Facet Fields are set correctly, as per the documentation.</p>\n<p>Any variable from your request that is <em>not</em> a valid Facet will be ignored.</p>\n<h3 id=\"and-facets-2\">AND facets <a class=\"heading-anchor-permalink\" href=\"#and-facets-2\">#</a></h3>\n<p>To use AND facets, this example should get you started:</p>\n<pre><code class=\"language-php\">    $data = Controller::curr()-&gt;getRequest()-&gt;getVars();\n    $index = Injector::inst()-&gt;get(MyIndex::class);\n    $query = Injector::inst()-&gt;get(BaseQuery::class);\n    $facetedFields = $index-&gt;getFacetFields();\n    foreach ($facetedFields as $className =&gt; $field) {\n        // Title of your field, as defined in the FacetFields\n        if (!empty($data[$field['Title']])) {\n            // Add a facet filter with its title and the value from the request data\n            $query-&gt;addFacetFilter($field['Title'], $data[$field['Title']]);\n        }\n    }\n</code></pre>\n<p><em>Note</em>, <code>addFacetFilter</code> and <code>addAndFacetFilter</code> are interchangeable.</p>\n<h3 id=\"or-facets-2\">OR facets <a class=\"heading-anchor-permalink\" href=\"#or-facets-2\">#</a></h3>\n<p>To use OR facets, this example should get you started:</p>\n<pre><code class=\"language-php\">    $data = Controller::curr()-&gt;getRequest()-&gt;getVars();\n    $index = Injector::inst()-&gt;get(MyIndex::class);\n    $query = Injector::inst()-&gt;get(BaseQuery::class);\n    $facetedFields = $index-&gt;getFacetFields();\n    foreach ($facetedFields as $className =&gt; $field) {\n        // Title of your field, as defined in the FacetFields\n        if (!empty($data[$field['Title']])) {\n            // Add a facet filter with its title and the value from the request data\n            $query-&gt;addOrFacetFilter($field['Title'], $data[$field['Title']]);\n        }\n    }\n</code></pre>\n<p>Notice the subtle difference in <code>$query-&gt;addOrFacetFilter()</code> versus <code>$query-&gt;addFacetFilter()</code></p>\n",
      "id": 6
    },
    {
      "path": "06-Advanced-Options/02-Boosting.md",
      "url": "06-Advanced-Options/02-Boosting.html",
      "content": "# Boost queries\n\nBoosting can be done at both Index time, if the configuration supports it, or at Query time.\n\nTo boost a certain query at Query time (easiest), use the following syntax:\n\n**NOTE** With Solr, the field names are _underscored_. In Elastic, they are `.` dotted.\n\nYou'll need to prefix your boost field, with the base class it is on. E.g. for Page Title,\nyour boosted field is `SiteTree.Title`, not `Page.Title`, as SiteTree is the base class that holds\nthe Title.\n```php\n    $query->addBoostedField('Field.Name', $value);\n```\n\nWhere `$value` is the boosting value. The default value is `1.0`, anything below that will decrease the\nrelevance, anything above increases it.\n\n## Boosting a single term out of a set\n\nTo boost a single term specifically, or on a specific field, you can use the following:\n\n```php\n$query->addTerm('My search terms', ['Fields', 'To', 'Boost', 'On'], $value);\n```\n\nWhere the array of fields should not be empty. `$value` is the amount of boosting that should be applied\nto the fields in the array, for example `$value = 2` will mean that results are treated as twice as relevant.\n\nThis executes a global search for the term, followed by a boosting for each field in the\nfield array with a boost status of `$value`.\n\nNote that the boosted fields do need to be added as a boosted field at Configure time.\n",
      "html": "<h1 id=\"boost-queries\">Boost queries <a class=\"heading-anchor-permalink\" href=\"#boost-queries\">#</a></h1>\n<p>Boosting can be done at both Index time, if the configuration supports it, or at Query time.</p>\n<p>To boost a certain query at Query time (easiest), use the following syntax:</p>\n<p><strong>NOTE</strong> With Solr, the field names are <em>underscored</em>. In Elastic, they are <code>.</code> dotted.</p>\n<p>You’ll need to prefix your boost field, with the base class it is on. E.g. for Page Title,\nyour boosted field is <code>SiteTree.Title</code>, not <code>Page.Title</code>, as SiteTree is the base class that holds\nthe Title.</p>\n<pre><code class=\"language-php\">    $query-&gt;addBoostedField('Field.Name', $value);\n</code></pre>\n<p>Where <code>$value</code> is the boosting value. The default value is <code>1.0</code>, anything below that will decrease the\nrelevance, anything above increases it.</p>\n<h2 id=\"boosting-a-single-term-out-of-a-set\">Boosting a single term out of a set <a class=\"heading-anchor-permalink\" href=\"#boosting-a-single-term-out-of-a-set\">#</a></h2>\n<p>To boost a single term specifically, or on a specific field, you can use the following:</p>\n<pre><code class=\"language-php\">$query-&gt;addTerm('My search terms', ['Fields', 'To', 'Boost', 'On'], $value);\n</code></pre>\n<p>Where the array of fields should not be empty. <code>$value</code> is the amount of boosting that should be applied\nto the fields in the array, for example <code>$value = 2</code> will mean that results are treated as twice as relevant.</p>\n<p>This executes a global search for the term, followed by a boosting for each field in the\nfield array with a boost status of <code>$value</code>.</p>\n<p>Note that the boosted fields do need to be added as a boosted field at Configure time.</p>\n",
      "id": 7
    },
    {
      "path": "06-Advanced-Options/03-Fuzzy-search.md",
      "url": "06-Advanced-Options/03-Fuzzy-search.html",
      "content": "# Fuzzyness\n\n**To do**\n\nFuzzyness can be set at query time, to search a range of similar query terms.\n\nTo use fuzzyness, here's an example:\n\n```php\n$query->addTerm('SearchTerm', [], [], 5);\n```\n\nThis example would add a fuzzyness of 5 to the query. \"Fuzzyness\" refers to the number of edits\nrequired to get from one search term to the next. As an example, 'SearchTerm' with fuzzyness 5 will\nreturn the following:\n\n- Search (four deletes)\n- Starch (four deletes, one substitution)\n- archers (four deletes, one insert)\n\nAnd other combinations of five actions (insert, delete, substitute)\n",
      "html": "<h1 id=\"fuzzyness\">Fuzzyness <a class=\"heading-anchor-permalink\" href=\"#fuzzyness\">#</a></h1>\n<p><strong>To do</strong></p>\n<p>Fuzzyness can be set at query time, to search a range of similar query terms.</p>\n<p>To use fuzzyness, here’s an example:</p>\n<pre><code class=\"language-php\">$query-&gt;addTerm('SearchTerm', [], [], 5);\n</code></pre>\n<p>This example would add a fuzzyness of 5 to the query. “Fuzzyness” refers to the number of edits\nrequired to get from one search term to the next. As an example, ‘SearchTerm’ with fuzzyness 5 will\nreturn the following:</p>\n<ul>\n<li>Search (four deletes)</li>\n<li>Starch (four deletes, one substitution)</li>\n<li>archers (four deletes, one insert)</li>\n</ul>\n<p>And other combinations of five actions (insert, delete, substitute)</p>\n",
      "id": 8
    },
    {
      "path": "06-Advanced-Options/04-Elevation.md",
      "url": "06-Advanced-Options/04-Elevation.html",
      "content": "# Elevation\n\n### NOTE\n\nElevation is not yet available, and unclear if it ever will be",
      "html": "<h1 id=\"elevation\">Elevation <a class=\"heading-anchor-permalink\" href=\"#elevation\">#</a></h1>\n<h3 id=\"note\">NOTE <a class=\"heading-anchor-permalink\" href=\"#note\">#</a></h3>\n<p>Elevation is not yet available, and unclear if it ever will be</p>\n",
      "id": 9
    },
    {
      "path": "06-Advanced-Options/05-Filters-excludes.md",
      "url": "06-Advanced-Options/05-Filters-excludes.html",
      "content": "# Advanced filters & excludes\n\n**Currently, only _must_ and _should filters are supported**\n\nA \"must\" or \"should\" filter, is something that either must be in the result (e.g. Title contains \"Home\"),\nor \"should\" be in the filter, an [OR] filter.",
      "html": "<h1 id=\"advanced-filters-%26-excludes\">Advanced filters &amp; excludes <a class=\"heading-anchor-permalink\" href=\"#advanced-filters-%26-excludes\">#</a></h1>\n<p><strong>Currently, only <em>must</em> and _should filters are supported</strong></p>\n<p>A “must” or “should” filter, is something that either must be in the result (e.g. Title contains “Home”),\nor “should” be in the filter, an [OR] filter.</p>\n",
      "id": 10
    },
    {
      "path": "07-Customisation.md",
      "url": "07-Customisation.html",
      "content": "# Customisation\n\n## Extension points\n\nAll steps of the process, from index to searching, have extension points.\n\nThese extension points can be used to alter or update the respective steps.\n\nAvailable extension points:\n\n| Method | Used for | Available on |\n| ------ | -------- | ------------ |\n| `onBeforeInit` | Update initialisation features | `BaseIndex` |\n| `onAfterInit` | Update initialisation features | `BaseIndex` |\n| `onBeforeSearch` | Before executing the search, update the query | `BaseIndex` |\n| `onAfterSearch` | Manipulate the results | `BaseIndex` |\n| `updateSearchResults` | Manipulate the returned result object | `BaseIndex` |\n\n",
      "html": "<h1 id=\"customisation\">Customisation <a class=\"heading-anchor-permalink\" href=\"#customisation\">#</a></h1>\n<h2 id=\"extension-points\">Extension points <a class=\"heading-anchor-permalink\" href=\"#extension-points\">#</a></h2>\n<p>All steps of the process, from index to searching, have extension points.</p>\n<p>These extension points can be used to alter or update the respective steps.</p>\n<p>Available extension points:</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Used for</th>\n<th>Available on</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>onBeforeInit</code></td>\n<td>Update initialisation features</td>\n<td><code>BaseIndex</code></td>\n</tr>\n<tr>\n<td><code>onAfterInit</code></td>\n<td>Update initialisation features</td>\n<td><code>BaseIndex</code></td>\n</tr>\n<tr>\n<td><code>onBeforeSearch</code></td>\n<td>Before executing the search, update the query</td>\n<td><code>BaseIndex</code></td>\n</tr>\n<tr>\n<td><code>onAfterSearch</code></td>\n<td>Manipulate the results</td>\n<td><code>BaseIndex</code></td>\n</tr>\n<tr>\n<td><code>updateSearchResults</code></td>\n<td>Manipulate the returned result object</td>\n<td><code>BaseIndex</code></td>\n</tr>\n</tbody>\n</table>\n",
      "id": 11
    },
    {
      "path": "08-CMS-Usage.md",
      "url": "08-CMS-Usage.html",
      "content": "# CMS Usage\n\nSee the Search admin in the CMS\n\n## Features\n\n- See if there are any applicable dirty objects to re-index\n- Add, remove or edit synonyms\n    - Note that YML-based synonyms can not be edited from the CMS\n",
      "html": "<h1 id=\"cms-usage\">CMS Usage <a class=\"heading-anchor-permalink\" href=\"#cms-usage\">#</a></h1>\n<p>See the Search admin in the CMS</p>\n<h2 id=\"features\">Features <a class=\"heading-anchor-permalink\" href=\"#features\">#</a></h2>\n<ul>\n<li>See if there are any applicable dirty objects to re-index</li>\n<li>Add, remove or edit synonyms\n<ul>\n<li>Note that YML-based synonyms can not be edited from the CMS</li>\n</ul>\n</li>\n</ul>\n",
      "id": 12
    },
    {
      "path": "09-Debugging.md",
      "url": "09-Debugging.html",
      "content": "# Debugging\n\n**Work in progress**\n\n# Logging\n\nEvery error triggers your `Logger`\n\n## Colour codes\n\nThe Gridfield is colour-coded by type of error. This can be disabled by overriding the `GridFieldExtension` class.\n",
      "html": "<h1 id=\"debugging\">Debugging <a class=\"heading-anchor-permalink\" href=\"#debugging\">#</a></h1>\n<p><strong>Work in progress</strong></p>\n<h1 id=\"logging\">Logging <a class=\"heading-anchor-permalink\" href=\"#logging\">#</a></h1>\n<p>Every error triggers your <code>Logger</code></p>\n<h2 id=\"colour-codes\">Colour codes <a class=\"heading-anchor-permalink\" href=\"#colour-codes\">#</a></h2>\n<p>The Gridfield is colour-coded by type of error. This can be disabled by overriding the <code>GridFieldExtension</code> class.</p>\n",
      "id": 13
    },
    {
      "path": "10-Suggestions.md",
      "url": "10-Suggestions.html",
      "content": "# Elastic Suggest\n\nWork in progress, try doing a search and see what the result `->getSpellcheck()` returns.\n\nIt is an ArrayList object, with ArrayData.\n\nThe ArrayData is constructed as follows:\n\n```php\n[\n    'original' => 'Originally Spelled Word or Phrase',\n    'suggestion' => 'Elastic suggestion based on all content'\n]\n```\n",
      "html": "<h1 id=\"elastic-suggest\">Elastic Suggest <a class=\"heading-anchor-permalink\" href=\"#elastic-suggest\">#</a></h1>\n<p>Work in progress, try doing a search and see what the result <code>-&gt;getSpellcheck()</code> returns.</p>\n<p>It is an ArrayList object, with ArrayData.</p>\n<p>The ArrayData is constructed as follows:</p>\n<pre><code class=\"language-php\">[\n    'original' =&gt; 'Originally Spelled Word or Phrase',\n    'suggestion' =&gt; 'Elastic suggestion based on all content'\n]\n</code></pre>\n",
      "id": 14
    },
    {
      "path": "11-View-Permissions.md",
      "url": "11-View-Permissions.html",
      "content": "# Viewing permissions\n\nView permissions are indexed group-based and settings-based.\n\nAt page-level, this means if it's a public page, the view will be indexed as `'null'`, meaning anyone can see it.\nInheritance is then calculated, and if it is logged-in only, then only logged-in members will be able to see it.\n\nIf it's specific groups, then these groups are indexed accordingly.\n\n## More granular approaches\n\n**Work in progress**\n",
      "html": "<h1 id=\"viewing-permissions\">Viewing permissions <a class=\"heading-anchor-permalink\" href=\"#viewing-permissions\">#</a></h1>\n<p>View permissions are indexed group-based and settings-based.</p>\n<p>At page-level, this means if it’s a public page, the view will be indexed as <code>'null'</code>, meaning anyone can see it.\nInheritance is then calculated, and if it is logged-in only, then only logged-in members will be able to see it.</p>\n<p>If it’s specific groups, then these groups are indexed accordingly.</p>\n<h2 id=\"more-granular-approaches\">More granular approaches <a class=\"heading-anchor-permalink\" href=\"#more-granular-approaches\">#</a></h2>\n<p><strong>Work in progress</strong></p>\n",
      "id": 15
    },
    {
      "path": "12-Dirty-classes.md",
      "url": "12-Dirty-classes.html",
      "content": "# Dirty Classes\n\n**Work in progress**",
      "html": "<h1 id=\"dirty-classes\">Dirty Classes <a class=\"heading-anchor-permalink\" href=\"#dirty-classes\">#</a></h1>\n<p><strong>Work in progress</strong></p>\n",
      "id": 16
    },
    {
      "path": "14-Contributing/01-Code-of-Conduct.md",
      "url": "14-Contributing/01-Code-of-Conduct.html",
      "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our community a \nharassment-free experience for everyone, regardless of age, body size, visible or invisible disability, \nethnicity, sex characteristics, gender identity and expression, level of experience, education, \nsocio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, \nand healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our community include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and \nwill take appropriate and fair corrective action in response to any behavior that they deem inappropriate, \nthreatening, offensive, or harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, \nwiki edits, issues, and other contributions that are not aligned to this Code of Conduct, \nand will communicate reasons for moderation decisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when an individual is \nofficially representing the community in public spaces. Examples of representing our community include \nusing an official e-mail address, posting via an official social media account, or acting as an \nappointed representative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders \nresponsible for enforcement at [github@casa-laguna.net](mailto:github@casa-laguna.net). \nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for \nany action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed unprofessional or \nunwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing clarity around \nthe nature of the violation and an explanation of why the behavior was inappropriate. \nA public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of actions.\n\n**Consequence**: A warning with consequences for continued behavior. \nNo interaction with the people involved, including unsolicited interaction with those enforcing the \nCode of Conduct, for a specified period of time. This includes avoiding interactions in \ncommunity spaces as well as external channels like social media. \nViolating these terms may lead to a temporary or permanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including sustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public communication with \nthe community for a specified period of time. No public or private interaction with the people involved, \nincluding unsolicited interaction with those enforcing the Code of Conduct, \nis allowed during this period. Violating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community standards, \nincluding sustained inappropriate behavior,  harassment of an individual, or aggression toward or \ndisparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the project community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][https://www.contributor-covenant.org/], version 2.0,\navailable at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct enforcement ladder](https://github.com/mozilla/diversity).\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.\n",
      "html": "<h1 id=\"contributor-covenant-code-of-conduct\">Contributor Covenant Code of Conduct <a class=\"heading-anchor-permalink\" href=\"#contributor-covenant-code-of-conduct\">#</a></h1>\n<h2 id=\"our-pledge\">Our Pledge <a class=\"heading-anchor-permalink\" href=\"#our-pledge\">#</a></h2>\n<p>We as members, contributors, and leaders pledge to make participation in our community a\nharassment-free experience for everyone, regardless of age, body size, visible or invisible disability,\nethnicity, sex characteristics, gender identity and expression, level of experience, education,\nsocio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>\n<p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive,\nand healthy community.</p>\n<h2 id=\"our-standards\">Our Standards <a class=\"heading-anchor-permalink\" href=\"#our-standards\">#</a></h2>\n<p>Examples of behavior that contributes to a positive environment for our community include:</p>\n<ul>\n<li>Demonstrating empathy and kindness toward other people</li>\n<li>Being respectful of differing opinions, viewpoints, and experiences</li>\n<li>Giving and gracefully accepting constructive feedback</li>\n<li>Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience</li>\n<li>Focusing on what is best not just for us as individuals, but for the overall community</li>\n</ul>\n<p>Examples of unacceptable behavior include:</p>\n<ul>\n<li>The use of sexualized language or imagery, and sexual attention or\nadvances of any kind</li>\n<li>Trolling, insulting or derogatory comments, and personal or political attacks</li>\n<li>Public or private harassment</li>\n<li>Publishing others’ private information, such as a physical or email\naddress, without their explicit permission</li>\n<li>Other conduct which could reasonably be considered inappropriate in a\nprofessional setting</li>\n</ul>\n<h2 id=\"enforcement-responsibilities\">Enforcement Responsibilities <a class=\"heading-anchor-permalink\" href=\"#enforcement-responsibilities\">#</a></h2>\n<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and\nwill take appropriate and fair corrective action in response to any behavior that they deem inappropriate,\nthreatening, offensive, or harmful.</p>\n<p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code,\nwiki edits, issues, and other contributions that are not aligned to this Code of Conduct,\nand will communicate reasons for moderation decisions when appropriate.</p>\n<h2 id=\"scope\">Scope <a class=\"heading-anchor-permalink\" href=\"#scope\">#</a></h2>\n<p>This Code of Conduct applies within all community spaces, and also applies when an individual is\nofficially representing the community in public spaces. Examples of representing our community include\nusing an official e-mail address, posting via an official social media account, or acting as an\nappointed representative at an online or offline event.</p>\n<h2 id=\"enforcement\">Enforcement <a class=\"heading-anchor-permalink\" href=\"#enforcement\">#</a></h2>\n<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders\nresponsible for enforcement at <a href=\"mailto:github@casa-laguna.net\">github@casa-laguna.net</a>.\nAll complaints will be reviewed and investigated promptly and fairly.</p>\n<p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>\n<h2 id=\"enforcement-guidelines\">Enforcement Guidelines <a class=\"heading-anchor-permalink\" href=\"#enforcement-guidelines\">#</a></h2>\n<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for\nany action they deem in violation of this Code of Conduct:</p>\n<h3 id=\"1.-correction\">1. Correction <a class=\"heading-anchor-permalink\" href=\"#1.-correction\">#</a></h3>\n<p><strong>Community Impact</strong>: Use of inappropriate language or other behavior deemed unprofessional or\nunwelcome in the community.</p>\n<p><strong>Consequence</strong>: A private, written warning from community leaders, providing clarity around\nthe nature of the violation and an explanation of why the behavior was inappropriate.\nA public apology may be requested.</p>\n<h3 id=\"2.-warning\">2. Warning <a class=\"heading-anchor-permalink\" href=\"#2.-warning\">#</a></h3>\n<p><strong>Community Impact</strong>: A violation through a single incident or series of actions.</p>\n<p><strong>Consequence</strong>: A warning with consequences for continued behavior.\nNo interaction with the people involved, including unsolicited interaction with those enforcing the\nCode of Conduct, for a specified period of time. This includes avoiding interactions in\ncommunity spaces as well as external channels like social media.\nViolating these terms may lead to a temporary or permanent ban.</p>\n<h3 id=\"3.-temporary-ban\">3. Temporary Ban <a class=\"heading-anchor-permalink\" href=\"#3.-temporary-ban\">#</a></h3>\n<p><strong>Community Impact</strong>: A serious violation of community standards, including sustained inappropriate behavior.</p>\n<p><strong>Consequence</strong>: A temporary ban from any sort of interaction or public communication with\nthe community for a specified period of time. No public or private interaction with the people involved,\nincluding unsolicited interaction with those enforcing the Code of Conduct,\nis allowed during this period. Violating these terms may lead to a permanent ban.</p>\n<h3 id=\"4.-permanent-ban\">4. Permanent Ban <a class=\"heading-anchor-permalink\" href=\"#4.-permanent-ban\">#</a></h3>\n<p><strong>Community Impact</strong>: Demonstrating a pattern of violation of community standards,\nincluding sustained inappropriate behavior,  harassment of an individual, or aggression toward or\ndisparagement of classes of individuals.</p>\n<p><strong>Consequence</strong>: A permanent ban from any sort of public interaction within the project community.</p>\n<h2 id=\"attribution\">Attribution <a class=\"heading-anchor-permalink\" href=\"#attribution\">#</a></h2>\n<p>This Code of Conduct is adapted from the [Contributor Covenant][<a href=\"https://www.contributor-covenant.org/\">https://www.contributor-covenant.org/</a>], version 2.0,\navailable at <a href=\"https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\">https://www.contributor-covenant.org/version/2/0/code_of_conduct.html</a>.</p>\n<p>Community Impact Guidelines were inspired by <a href=\"https://github.com/mozilla/diversity\">Mozilla’s code of conduct enforcement ladder</a>.</p>\n<p>For answers to common questions about this code of conduct, see the FAQ at\n<a href=\"https://www.contributor-covenant.org/faq\">https://www.contributor-covenant.org/faq</a>. Translations are available at <a href=\"https://www.contributor-covenant.org/translations\">https://www.contributor-covenant.org/translations</a>.</p>\n",
      "id": 17
    },
    {
      "path": "14-Contributing/02-Contributing.md",
      "url": "14-Contributing/02-Contributing.html",
      "content": "# Contributing\n\nAny open source product is only as good as the community behind it. You can participate by sharing code, \nideas, or simply helping others. No matter what your skill level is, every contribution counts.\n\n * [Sharing your opinion and raising issues](http://docs.silverstripe.org/en/4.3/contributing/issues_and_bugs/)\n * [Providing code, whether it's creating a feature or fixing a bug](http://docs.silverstripe.org/en/4.3/contributing/code/)\n * [Writing and translating documentation](http://docs.silverstripe.org/en/4.3/contributing/translations/)\n * [Translating user-interface elements](http://docs.silverstripe.org/en/4.3/contributing/translation_process/)\n\n## Signing commits\n\nIt is highly recommended to sign commits with your PGP key to ensure integrity.\n\n# Notes\n\nParts of these contributing guidelines are taken from\nhttps://github.com/bitfield/script/blob/master/CONTRIBUTING.md#Documentation\n\n## Documentation\n\nIt doesn't matter if you write the greatest piece of code in the history of the world\nif no-one knows it exists, or how to use it.\n\n## Write doc comments\n\nAny functions or methods you write should have useful documentation comments in the \nstandard PHP Docblock format. Specifically, they should say what inputs the function takes, \nwhat it does (in detail), and what outputs it returns. If it returns an error value, \nexplain under what circumstances this happens.\n\nFor example:\n```php\n/**\n * Method to enable predictive search\n * Gives the user a prediction on what it is trying to search for\n * @param string $searchTerm\n * @return ArrayList\n */\n```\nThis is the whole user manual for your code. It will be included in the autogenerated \ndocumentation for the whole package. Remember that readers will often see it without the \naccompanying code, so it needs to make sense on its own.\n\n## Write a use case\n\nThis is probably the most important thing to bear in mind. A great design principle for software libraries is \nto start with a real-world use case, and try to implement it using the feature you have in mind. \nNo issues or PRs will be accepted into script without an accompanying use case (See the project board). \nAnd we hold ourselves to that rule just as much as anybody else.\n\nWhat do we mean by \"use case\"? We mean a real problem that you or someone else actually has that could be solved using the feature.\nFor example, you might think it's a very cool idea to add a `Frobnicate()` method to this module. \nMaybe it is, but what's it for? Where would this be used in the real world? Can you give an example of a \nproblem that could be solved by a program using `Frobnicate()`? If so, what would the program look like?\n\nThe reason for insisting upon this up front is that it's much easier to design a feature the right way if you start\nwith its usage in mind. It's all too easy to design something in the abstract, and then find later that when you \ntry to use it in a program, the API is completely unsuitable.\n\nAnother reason for having a use case is that it gives us a useful example program,\nwhich can be included with the library to show how the feature is used.\n\nThe final reason is that it's tempting to over-elaborate a design and add all sorts of bells and whistles\nthat nobody actually wants. Simple APIs are best. If you think of an enhancement, \nbut it's not needed for your use case, leave it out. Things can always be enhanced later if necessary.\n\n## Update the docs\n\nAny change to the API should also be accompanied by an update to the docs. \nIf you add a new method, add it in the appropriate place (sources, filters, etc.), \nin its correct order alphabetically, and with a suitable (brief) example of its use.\n\n# Before submitting your pull request\n\nHere's a handy checklist for making sure your PR will be accepted as quickly as possible.\n\n - [ ] Have you opened an issue to discuss the feature and agree its general design?\n - [ ] Do you have a use case and, ideally, an example program using the feature?\n - [ ] Do you have **passing** tests covering 90%+ of the feature code?\n - [ ] Have you written complete and accurate doc comments?\n - [ ] Have you updated the README and the documentation?\n - [ ] You rock. Thanks a lot.\n\n# After submitting your PR\n\nHere's a nice tip for PR-driven development in general. After you've submitted the PR, do a 'pre-code-review'. \nGo through the diffs, line by line, and be your own code reviewer. Does something look weird? \nIs something not quite straightforward? It's quite likely that you'll spot errors at this stage which you missed before, \nsimply because you're looking at the code with a reviewer's mindset.\n\nIf so, fix them! But if you can foresee a question from a code reviewer, comment on the code to answer it in advance. \n(Even better, improve the code so that the question doesn't arise.)\n\n# The code review process\n\nIf you've completed all these steps, we _will_ invest significant time and energy in giving your PR a detailed code review. \nThis is a powerful and beneficial process which can not only improve the code, but can also help you learn to be a better \nsoftware engineer—and the same goes for us!\n\n## Expect to be taken seriously\n\nDon't think of code review as a \"you got this wrong, fix it\" kind of conversation (this isn't a helpful review comment). \nInstead, think of it as a discussion where both sides can ask questions, make suggestions, clarify problems and misunderstandings, \ncatch mistakes, and add improvements.\n\nYou shouldn't be disappointed if you don't get a simple 'LGTM' and an instant merge. \nInstead, the more comments you get, the more seriously it means we are taking your work. Where appropriate,\nI'll say what we liked as well as what we'd like to see improved.\n\n## Dealing with comments\n\nNow comes the tricky bit. You may not agree with some of the code review comments. \nReviewing code is a delicate business in the first place, requiring diplomacy as well as discretion, \nbut responding to code reviews is also a skilled task.\n\nIf you find yourself reacting emotionally, take a break. Go walk in the woods for a while, \nor play with a laughing child. When you come back to the code, approach it as though it were someone else's, \nnot your own, and ask yourself seriously whether or not the reviewer _has a point_.\n\nIf you genuinely think the reviewer has just misunderstood something, or made a mistake, \ntry to clarify the issue. Ask questions, don't make accusations. Remember that every project has a certain way of doing things, \nwhich may not be your way. It's polite to go along with these practices and conventions.\n\nYou may feel as though you're doing the project maintainer a favour by contributing, as indeed you are, \nbut an open source project is like somebody's home. They're used to living there, they probably like it the way it is, \nand they don't always respond well to strangers marching in and rearranging the furniture. \n\nBe considerate, and be willing to listen and make changes.\n\n## This may take a while\n\nTry to be patient. We've all had the experience of sending in our beautifully-crafted PR and then waiting, waiting, waiting.\nWhy won't those idiots just merge it? How come other issues and PRs are getting dealt with ahead of mine? Am I invisible?\n\nIn fact, doing a _proper_ and serious code review is a time-consuming business. It's not just a case of skim-reading the diffs. \nThe reviewer will need to check out your branch, run the tests, think carefully about what you've done, \nmake suggestions, test alternatives. It's almost as much work as writing the PR in the first place.\n\nOpen source maintainers are just regular folk with jobs, kids, and zero free time or energy. \nThey may not be able to drop everything and put in several hours on your PR. \nThe task may have to wait a week or two until they can get sufficient time and peace and quiet to work on it. \nIt's fine to add a comment on the PR if you haven't heard anything for a while,\nasking if the reviewer's been able to look at it and whether there's anything you can do to help speed things up. \nComments like 'Y U NO MERGE' are unlikely to elicit a positive response.\n\nThanks again for helping out!\n\n---\n\n\\*: We understand that if you throw exceptions, proper tests can not always be written for those cases.\nThus, it's okay to omit exceptions in most cases.\n",
      "html": "<h1 id=\"contributing\">Contributing <a class=\"heading-anchor-permalink\" href=\"#contributing\">#</a></h1>\n<p>Any open source product is only as good as the community behind it. You can participate by sharing code,\nideas, or simply helping others. No matter what your skill level is, every contribution counts.</p>\n<ul>\n<li><a href=\"http://docs.silverstripe.org/en/4.3/contributing/issues_and_bugs/\">Sharing your opinion and raising issues</a></li>\n<li><a href=\"http://docs.silverstripe.org/en/4.3/contributing/code/\">Providing code, whether it’s creating a feature or fixing a bug</a></li>\n<li><a href=\"http://docs.silverstripe.org/en/4.3/contributing/translations/\">Writing and translating documentation</a></li>\n<li><a href=\"http://docs.silverstripe.org/en/4.3/contributing/translation_process/\">Translating user-interface elements</a></li>\n</ul>\n<h2 id=\"signing-commits\">Signing commits <a class=\"heading-anchor-permalink\" href=\"#signing-commits\">#</a></h2>\n<p>It is highly recommended to sign commits with your PGP key to ensure integrity.</p>\n<h1 id=\"notes\">Notes <a class=\"heading-anchor-permalink\" href=\"#notes\">#</a></h1>\n<p>Parts of these contributing guidelines are taken from\n<a href=\"https://github.com/bitfield/script/blob/master/CONTRIBUTING.md#Documentation\">https://github.com/bitfield/script/blob/master/CONTRIBUTING.md#Documentation</a></p>\n<h2 id=\"documentation\">Documentation <a class=\"heading-anchor-permalink\" href=\"#documentation\">#</a></h2>\n<p>It doesn’t matter if you write the greatest piece of code in the history of the world\nif no-one knows it exists, or how to use it.</p>\n<h2 id=\"write-doc-comments\">Write doc comments <a class=\"heading-anchor-permalink\" href=\"#write-doc-comments\">#</a></h2>\n<p>Any functions or methods you write should have useful documentation comments in the\nstandard PHP Docblock format. Specifically, they should say what inputs the function takes,\nwhat it does (in detail), and what outputs it returns. If it returns an error value,\nexplain under what circumstances this happens.</p>\n<p>For example:</p>\n<pre><code class=\"language-php\">/**\n * Method to enable predictive search\n * Gives the user a prediction on what it is trying to search for\n * @param string $searchTerm\n * @return ArrayList\n */\n</code></pre>\n<p>This is the whole user manual for your code. It will be included in the autogenerated\ndocumentation for the whole package. Remember that readers will often see it without the\naccompanying code, so it needs to make sense on its own.</p>\n<h2 id=\"write-a-use-case\">Write a use case <a class=\"heading-anchor-permalink\" href=\"#write-a-use-case\">#</a></h2>\n<p>This is probably the most important thing to bear in mind. A great design principle for software libraries is\nto start with a real-world use case, and try to implement it using the feature you have in mind.\nNo issues or PRs will be accepted into script without an accompanying use case (See the project board).\nAnd we hold ourselves to that rule just as much as anybody else.</p>\n<p>What do we mean by “use case”? We mean a real problem that you or someone else actually has that could be solved using the feature.\nFor example, you might think it’s a very cool idea to add a <code>Frobnicate()</code> method to this module.\nMaybe it is, but what’s it for? Where would this be used in the real world? Can you give an example of a\nproblem that could be solved by a program using <code>Frobnicate()</code>? If so, what would the program look like?</p>\n<p>The reason for insisting upon this up front is that it’s much easier to design a feature the right way if you start\nwith its usage in mind. It’s all too easy to design something in the abstract, and then find later that when you\ntry to use it in a program, the API is completely unsuitable.</p>\n<p>Another reason for having a use case is that it gives us a useful example program,\nwhich can be included with the library to show how the feature is used.</p>\n<p>The final reason is that it’s tempting to over-elaborate a design and add all sorts of bells and whistles\nthat nobody actually wants. Simple APIs are best. If you think of an enhancement,\nbut it’s not needed for your use case, leave it out. Things can always be enhanced later if necessary.</p>\n<h2 id=\"update-the-docs\">Update the docs <a class=\"heading-anchor-permalink\" href=\"#update-the-docs\">#</a></h2>\n<p>Any change to the API should also be accompanied by an update to the docs.\nIf you add a new method, add it in the appropriate place (sources, filters, etc.),\nin its correct order alphabetically, and with a suitable (brief) example of its use.</p>\n<h1 id=\"before-submitting-your-pull-request\">Before submitting your pull request <a class=\"heading-anchor-permalink\" href=\"#before-submitting-your-pull-request\">#</a></h1>\n<p>Here’s a handy checklist for making sure your PR will be accepted as quickly as possible.</p>\n<ul>\n<li>[ ] Have you opened an issue to discuss the feature and agree its general design?</li>\n<li>[ ] Do you have a use case and, ideally, an example program using the feature?</li>\n<li>[ ] Do you have <strong>passing</strong> tests covering 90%+ of the feature code?</li>\n<li>[ ] Have you written complete and accurate doc comments?</li>\n<li>[ ] Have you updated the README and the documentation?</li>\n<li>[ ] You rock. Thanks a lot.</li>\n</ul>\n<h1 id=\"after-submitting-your-pr\">After submitting your PR <a class=\"heading-anchor-permalink\" href=\"#after-submitting-your-pr\">#</a></h1>\n<p>Here’s a nice tip for PR-driven development in general. After you’ve submitted the PR, do a ‘pre-code-review’.\nGo through the diffs, line by line, and be your own code reviewer. Does something look weird?\nIs something not quite straightforward? It’s quite likely that you’ll spot errors at this stage which you missed before,\nsimply because you’re looking at the code with a reviewer’s mindset.</p>\n<p>If so, fix them! But if you can foresee a question from a code reviewer, comment on the code to answer it in advance.\n(Even better, improve the code so that the question doesn’t arise.)</p>\n<h1 id=\"the-code-review-process\">The code review process <a class=\"heading-anchor-permalink\" href=\"#the-code-review-process\">#</a></h1>\n<p>If you’ve completed all these steps, we <em>will</em> invest significant time and energy in giving your PR a detailed code review.\nThis is a powerful and beneficial process which can not only improve the code, but can also help you learn to be a better\nsoftware engineer—and the same goes for us!</p>\n<h2 id=\"expect-to-be-taken-seriously\">Expect to be taken seriously <a class=\"heading-anchor-permalink\" href=\"#expect-to-be-taken-seriously\">#</a></h2>\n<p>Don’t think of code review as a “you got this wrong, fix it” kind of conversation (this isn’t a helpful review comment).\nInstead, think of it as a discussion where both sides can ask questions, make suggestions, clarify problems and misunderstandings,\ncatch mistakes, and add improvements.</p>\n<p>You shouldn’t be disappointed if you don’t get a simple ‘LGTM’ and an instant merge.\nInstead, the more comments you get, the more seriously it means we are taking your work. Where appropriate,\nI’ll say what we liked as well as what we’d like to see improved.</p>\n<h2 id=\"dealing-with-comments\">Dealing with comments <a class=\"heading-anchor-permalink\" href=\"#dealing-with-comments\">#</a></h2>\n<p>Now comes the tricky bit. You may not agree with some of the code review comments.\nReviewing code is a delicate business in the first place, requiring diplomacy as well as discretion,\nbut responding to code reviews is also a skilled task.</p>\n<p>If you find yourself reacting emotionally, take a break. Go walk in the woods for a while,\nor play with a laughing child. When you come back to the code, approach it as though it were someone else’s,\nnot your own, and ask yourself seriously whether or not the reviewer <em>has a point</em>.</p>\n<p>If you genuinely think the reviewer has just misunderstood something, or made a mistake,\ntry to clarify the issue. Ask questions, don’t make accusations. Remember that every project has a certain way of doing things,\nwhich may not be your way. It’s polite to go along with these practices and conventions.</p>\n<p>You may feel as though you’re doing the project maintainer a favour by contributing, as indeed you are,\nbut an open source project is like somebody’s home. They’re used to living there, they probably like it the way it is,\nand they don’t always respond well to strangers marching in and rearranging the furniture.</p>\n<p>Be considerate, and be willing to listen and make changes.</p>\n<h2 id=\"this-may-take-a-while\">This may take a while <a class=\"heading-anchor-permalink\" href=\"#this-may-take-a-while\">#</a></h2>\n<p>Try to be patient. We’ve all had the experience of sending in our beautifully-crafted PR and then waiting, waiting, waiting.\nWhy won’t those idiots just merge it? How come other issues and PRs are getting dealt with ahead of mine? Am I invisible?</p>\n<p>In fact, doing a <em>proper</em> and serious code review is a time-consuming business. It’s not just a case of skim-reading the diffs.\nThe reviewer will need to check out your branch, run the tests, think carefully about what you’ve done,\nmake suggestions, test alternatives. It’s almost as much work as writing the PR in the first place.</p>\n<p>Open source maintainers are just regular folk with jobs, kids, and zero free time or energy.\nThey may not be able to drop everything and put in several hours on your PR.\nThe task may have to wait a week or two until they can get sufficient time and peace and quiet to work on it.\nIt’s fine to add a comment on the PR if you haven’t heard anything for a while,\nasking if the reviewer’s been able to look at it and whether there’s anything you can do to help speed things up.\nComments like ‘Y U NO MERGE’ are unlikely to elicit a positive response.</p>\n<p>Thanks again for helping out!</p>\n<hr>\n<p>*: We understand that if you throw exceptions, proper tests can not always be written for those cases.\nThus, it’s okay to omit exceptions in most cases.</p>\n",
      "id": 18
    },
    {
      "path": "15-Help/01-Changelog.md",
      "url": "15-Help/01-Changelog.html",
      "content": "# Changelog\n\n# Releases < 1.0.0\n\nFirst functional\n- Searching\n- Spellchecks\n- Highlighting\n- Filtering\n- Boosting\n- Paginated results\n- Document push to Elastic",
      "html": "<h1 id=\"changelog\">Changelog <a class=\"heading-anchor-permalink\" href=\"#changelog\">#</a></h1>\n<h1 id=\"releases-%3C-1.0.0\">Releases &lt; 1.0.0 <a class=\"heading-anchor-permalink\" href=\"#releases-%3C-1.0.0\">#</a></h1>\n<p>First functional</p>\n<ul>\n<li>Searching</li>\n<li>Spellchecks</li>\n<li>Highlighting</li>\n<li>Filtering</li>\n<li>Boosting</li>\n<li>Paginated results</li>\n<li>Document push to Elastic</li>\n</ul>\n",
      "id": 19
    },
    {
      "path": "15-Help/02-FAQ.md",
      "url": "15-Help/02-FAQ.html",
      "content": "# FAQ\n\n### Do you support synonyms?\n\nYes! Including US to UK spelling synonyms by default!\n\n### Fast?\n\nYes, very fast\n\n### Why do I need to name my index?\n\nYou have a name yourself, don't you? It makes sense to name the index too.\n\n### I would like a feature to be added!\n\nI would like an issue to be created\n\n### Dealing with errors\n\nEspecially when using facets, you should not redeclare fields to be filterable as well. If you run in to an error \nsaying you have duplicate fields, check your configuration for overlaps\ne.g. FilterFields does not have an overlap with FacetFields\n\n### @package tag\n\nThe package tag is to help the API documentation to stay up to date.\n\nWe are aware it's a bit of overkill and redundant, but it does not have any impact on the actual code.\n\n## Your software is free and open, isn't it?\n\nYes, but it still costs us time to respond to issues, look at pull requests\nor even support you with problems outside of the module.\n\nWe are happy to help you, but we have put a lot of time and effort in to writing software\nthat is useful to you, the community. We ask you, would you give something back?\nIt is not mandatory, of course.\n\nWe will add you to the list of sponsors, if you decide to thank the maintainers for this\nwork.\n",
      "html": "<h1 id=\"faq\">FAQ <a class=\"heading-anchor-permalink\" href=\"#faq\">#</a></h1>\n<h3 id=\"do-you-support-synonyms%3F\">Do you support synonyms? <a class=\"heading-anchor-permalink\" href=\"#do-you-support-synonyms%3F\">#</a></h3>\n<p>Yes! Including US to UK spelling synonyms by default!</p>\n<h3 id=\"fast%3F\">Fast? <a class=\"heading-anchor-permalink\" href=\"#fast%3F\">#</a></h3>\n<p>Yes, very fast</p>\n<h3 id=\"why-do-i-need-to-name-my-index%3F\">Why do I need to name my index? <a class=\"heading-anchor-permalink\" href=\"#why-do-i-need-to-name-my-index%3F\">#</a></h3>\n<p>You have a name yourself, don’t you? It makes sense to name the index too.</p>\n<h3 id=\"i-would-like-a-feature-to-be-added!\">I would like a feature to be added! <a class=\"heading-anchor-permalink\" href=\"#i-would-like-a-feature-to-be-added!\">#</a></h3>\n<p>I would like an issue to be created</p>\n<h3 id=\"dealing-with-errors\">Dealing with errors <a class=\"heading-anchor-permalink\" href=\"#dealing-with-errors\">#</a></h3>\n<p>Especially when using facets, you should not redeclare fields to be filterable as well. If you run in to an error\nsaying you have duplicate fields, check your configuration for overlaps\ne.g. FilterFields does not have an overlap with FacetFields</p>\n<h3 id=\"%40package-tag\">@package tag <a class=\"heading-anchor-permalink\" href=\"#%40package-tag\">#</a></h3>\n<p>The package tag is to help the API documentation to stay up to date.</p>\n<p>We are aware it’s a bit of overkill and redundant, but it does not have any impact on the actual code.</p>\n<h2 id=\"your-software-is-free-and-open%2C-isn%E2%80%99t-it%3F\">Your software is free and open, isn’t it? <a class=\"heading-anchor-permalink\" href=\"#your-software-is-free-and-open%2C-isn%E2%80%99t-it%3F\">#</a></h2>\n<p>Yes, but it still costs us time to respond to issues, look at pull requests\nor even support you with problems outside of the module.</p>\n<p>We are happy to help you, but we have put a lot of time and effort in to writing software\nthat is useful to you, the community. We ask you, would you give something back?\nIt is not mandatory, of course.</p>\n<p>We will add you to the list of sponsors, if you decide to thank the maintainers for this\nwork.</p>\n",
      "id": 20
    },
    {
      "path": "15-Help/03-Known-issues.md",
      "url": "15-Help/03-Known-issues.html",
      "content": "# Known issues\n\n## Database errors\n\nDid you do a build?\n\n`https://yourdomain.com/dev/build?flush=all`\n\n## Linux hosts\n\nProbably the best way to host",
      "html": "<h1 id=\"known-issues\">Known issues <a class=\"heading-anchor-permalink\" href=\"#known-issues\">#</a></h1>\n<h2 id=\"database-errors\">Database errors <a class=\"heading-anchor-permalink\" href=\"#database-errors\">#</a></h2>\n<p>Did you do a build?</p>\n<p><code>https://yourdomain.com/dev/build?flush=all</code></p>\n<h2 id=\"linux-hosts\">Linux hosts <a class=\"heading-anchor-permalink\" href=\"#linux-hosts\">#</a></h2>\n<p>Probably the best way to host</p>\n",
      "id": 21
    },
    {
      "path": "16-About/01-About.md",
      "url": "16-About/01-About.html",
      "content": "# About\n\nThis Elastic search module is aimed at a more modern, modular approach to searching with Elastic,\nwith an as close as possible API to the Solr module, for easy exchange of the backend search service used.\n\nIt is maintained by:\n* Simon `Firesphere` Erkelens\n* Elliot `null` Sawyer\n* Marco `Sheepy` Hermo\n",
      "html": "<h1 id=\"about\">About <a class=\"heading-anchor-permalink\" href=\"#about\">#</a></h1>\n<p>This Elastic search module is aimed at a more modern, modular approach to searching with Elastic,\nwith an as close as possible API to the Solr module, for easy exchange of the backend search service used.</p>\n<p>It is maintained by:</p>\n<ul>\n<li>Simon <code>Firesphere</code> Erkelens</li>\n<li>Elliot <code>null</code> Sawyer</li>\n<li>Marco <code>Sheepy</code> Hermo</li>\n</ul>\n",
      "id": 22
    },
    {
      "path": "16-About/02-Plans.md",
      "url": "16-About/02-Plans.html",
      "content": "# Future additions\n\n- [ ] Faceting\n- [ ] Dirty class recording\n- [ ] Delete an index\n- [ ] Multi-index querying\n- [ ] Member granular permission storage",
      "html": "<h1 id=\"future-additions\">Future additions <a class=\"heading-anchor-permalink\" href=\"#future-additions\">#</a></h1>\n<ul>\n<li>[ ] Faceting</li>\n<li>[ ] Dirty class recording</li>\n<li>[ ] Delete an index</li>\n<li>[ ] Multi-index querying</li>\n<li>[ ] Member granular permission storage</li>\n</ul>\n",
      "id": 23
    },
    {
      "path": "16-About/03-Codebase/01-Main-stats.md",
      "url": "16-About/03-Codebase/01-Main-stats.html",
      "content": "[![Maintainability](https://api.codeclimate.com/v1/badges/55c8967ef25e37182e3d/maintainability)](https://codeclimate.com/github/Firesphere/silverstripe-solr-search/maintainability)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/badges/quality-score.png?b=primary)](https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/?branch=primary)\n[![Code Coverage](https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/badges/coverage.png?b=primary)](https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/?branch=primary)\n[![CircleCI](https://circleci.com/gh/Firesphere/silverstripe-solr-search/tree/primary.svg?style=svg)](https://circleci.com/gh/Firesphere/silverstripe-solr-search/tree/primary)\n[![codecov](https://codecov.io/gh/Firesphere/silverstripe-solr-search/branch/primary/graph/badge.svg?token=BACi0PeDRD)](https://codecov.io/gh/Firesphere/silverstripe-solr-search)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/55c8967ef25e37182e3d/test_coverage)](https://codeclimate.com/github/Firesphere/silverstripe-solr-search/test_coverage)\n[![Build Status](https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/badges/build.png?b=primary)](https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/build-status/primary)\n\n# Codebase statistics from PHP Lines of Code\n\n",
      "html": "<p><a href=\"https://codeclimate.com/github/Firesphere/silverstripe-solr-search/maintainability\"><img src=\"https://api.codeclimate.com/v1/badges/55c8967ef25e37182e3d/maintainability\" alt=\"Maintainability\"></a>\n<a href=\"https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/?branch=primary\"><img src=\"https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/badges/quality-score.png?b=primary\" alt=\"Scrutinizer Code Quality\"></a>\n<a href=\"https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/?branch=primary\"><img src=\"https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/badges/coverage.png?b=primary\" alt=\"Code Coverage\"></a>\n<a href=\"https://circleci.com/gh/Firesphere/silverstripe-solr-search/tree/primary\"><img src=\"https://circleci.com/gh/Firesphere/silverstripe-solr-search/tree/primary.svg?style=svg\" alt=\"CircleCI\"></a>\n<a href=\"https://codecov.io/gh/Firesphere/silverstripe-solr-search\"><img src=\"https://codecov.io/gh/Firesphere/silverstripe-solr-search/branch/primary/graph/badge.svg?token=BACi0PeDRD\" alt=\"codecov\"></a>\n<a href=\"https://codeclimate.com/github/Firesphere/silverstripe-solr-search/test_coverage\"><img src=\"https://api.codeclimate.com/v1/badges/55c8967ef25e37182e3d/test_coverage\" alt=\"Test Coverage\"></a>\n<a href=\"https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/build-status/primary\"><img src=\"https://scrutinizer-ci.com/g/Firesphere/silverstripe-solr-search/badges/build.png?b=primary\" alt=\"Build Status\"></a></p>\n<h1 id=\"codebase-statistics-from-php-lines-of-code\">Codebase statistics from PHP Lines of Code <a class=\"heading-anchor-permalink\" href=\"#codebase-statistics-from-php-lines-of-code\">#</a></h1>\n",
      "id": 24
    }
  ]
}